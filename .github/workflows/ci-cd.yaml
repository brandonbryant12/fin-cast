# .github/workflows/ci-cd.yaml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-push:
    name: Build, Test & Push Docker Images
    runs-on: ubuntu-latest

    environment:
      name: ci-cd

    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Node.js and pnpm
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.7.0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      # 3. Install Dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 4. Run Lint Check
      # NOTE: You were missing the actual build step before linting/pushing
      # Lint dependsOn build in your turbo.json, but build wasn't explicitly run here.
      # Let's add the build step explicitly before the docker steps.
      - name: Run build
        run: pnpm build

      - name: Run lint check
        run: pnpm lint

      # --- Docker Steps ---

      # 6. Set up Docker Buildx
      - name: Set up Docker Buildx
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      # 7. Log in to Docker Hub
      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 8. Extract Docker metadata for server image
      - name: Extract metadata for server image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: meta_server
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/fin-cast-server
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      # 9. Build and push server image
      - name: Build and push server image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/server/Dockerfile
          push: true
          tags: ${{ steps.meta_server.outputs.tags }}
          labels: ${{ steps.meta_server.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 10. Extract Docker metadata for web image
      - name: Extract metadata for web image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/fin-cast-web
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      # 11. Build and push web image
      - name: Build and push web image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          tags: ${{ steps.meta_web.outputs.tags }}
          labels: ${{ steps.meta_web.outputs.labels }}
          build-args: |
            PUBLIC_SERVER_URL=${{ vars.PUBLIC_SERVER_URL || 'http://fallback.example.com' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max