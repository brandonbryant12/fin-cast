/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminLayoutImport } from './routes/admin/layout'
import { Route as PublicLayoutImport } from './routes/_public/layout'
import { Route as ProtectedLayoutImport } from './routes/_protected/layout'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as PublicRegisterImport } from './routes/_public/register'
import { Route as PublicLoginImport } from './routes/_public/login'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as AdminReviewsIndexImport } from './routes/admin/reviews/index'
import { Route as AdminPromptsIndexImport } from './routes/admin/prompts/index'
import { Route as AdminAppIndexImport } from './routes/admin/app/index'
import { Route as ProtectedPostsIndexImport } from './routes/_protected/posts/index'
import { Route as ProtectedPodcastsIndexImport } from './routes/_protected/podcasts/index'
import { Route as ProtectedNewsFeedIndexImport } from './routes/_protected/news-feed.index'
import { Route as ProtectedHomeIndexImport } from './routes/_protected/home/index'
import { Route as ProtectedPostsPostidIndexImport } from './routes/_protected/posts/$postid/index'
import { Route as ProtectedPodcastsPodcastIdIndexImport } from './routes/_protected/podcasts/$podcastId/index'

// Create/Update Routes

const AdminLayoutRoute = AdminLayoutImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const PublicLayoutRoute = PublicLayoutImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedLayoutRoute = ProtectedLayoutImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const PublicRegisterRoute = PublicRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const PublicLoginRoute = PublicLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicLayoutRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const AdminReviewsIndexRoute = AdminReviewsIndexImport.update({
  id: '/reviews/',
  path: '/reviews/',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const AdminPromptsIndexRoute = AdminPromptsIndexImport.update({
  id: '/prompts/',
  path: '/prompts/',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const AdminAppIndexRoute = AdminAppIndexImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => AdminLayoutRoute,
} as any)

const ProtectedPostsIndexRoute = ProtectedPostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedPodcastsIndexRoute = ProtectedPodcastsIndexImport.update({
  id: '/podcasts/',
  path: '/podcasts/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedNewsFeedIndexRoute = ProtectedNewsFeedIndexImport.update({
  id: '/news-feed/',
  path: '/news-feed/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedHomeIndexRoute = ProtectedHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedPostsPostidIndexRoute = ProtectedPostsPostidIndexImport.update({
  id: '/posts/$postid/',
  path: '/posts/$postid/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedPodcastsPodcastIdIndexRoute =
  ProtectedPodcastsPodcastIdIndexImport.update({
    id: '/podcasts/$podcastId/',
    path: '/podcasts/$podcastId/',
    getParentRoute: () => ProtectedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicLayoutImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginImport
      parentRoute: typeof PublicLayoutImport
    }
    '/_public/register': {
      id: '/_public/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof PublicRegisterImport
      parentRoute: typeof PublicLayoutImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_protected/home/': {
      id: '/_protected/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof ProtectedHomeIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/news-feed/': {
      id: '/_protected/news-feed/'
      path: '/news-feed'
      fullPath: '/news-feed'
      preLoaderRoute: typeof ProtectedNewsFeedIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/podcasts/': {
      id: '/_protected/podcasts/'
      path: '/podcasts'
      fullPath: '/podcasts'
      preLoaderRoute: typeof ProtectedPodcastsIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/posts/': {
      id: '/_protected/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof ProtectedPostsIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/admin/app/': {
      id: '/admin/app/'
      path: '/app'
      fullPath: '/admin/app'
      preLoaderRoute: typeof AdminAppIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/admin/prompts/': {
      id: '/admin/prompts/'
      path: '/prompts'
      fullPath: '/admin/prompts'
      preLoaderRoute: typeof AdminPromptsIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/admin/reviews/': {
      id: '/admin/reviews/'
      path: '/reviews'
      fullPath: '/admin/reviews'
      preLoaderRoute: typeof AdminReviewsIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof AdminLayoutImport
    }
    '/_protected/podcasts/$podcastId/': {
      id: '/_protected/podcasts/$podcastId/'
      path: '/podcasts/$podcastId'
      fullPath: '/podcasts/$podcastId'
      preLoaderRoute: typeof ProtectedPodcastsPodcastIdIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/posts/$postid/': {
      id: '/_protected/posts/$postid/'
      path: '/posts/$postid'
      fullPath: '/posts/$postid'
      preLoaderRoute: typeof ProtectedPostsPostidIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
  }
}

// Create and export the route tree

interface ProtectedLayoutRouteChildren {
  ProtectedHomeIndexRoute: typeof ProtectedHomeIndexRoute
  ProtectedNewsFeedIndexRoute: typeof ProtectedNewsFeedIndexRoute
  ProtectedPodcastsIndexRoute: typeof ProtectedPodcastsIndexRoute
  ProtectedPostsIndexRoute: typeof ProtectedPostsIndexRoute
  ProtectedPodcastsPodcastIdIndexRoute: typeof ProtectedPodcastsPodcastIdIndexRoute
  ProtectedPostsPostidIndexRoute: typeof ProtectedPostsPostidIndexRoute
}

const ProtectedLayoutRouteChildren: ProtectedLayoutRouteChildren = {
  ProtectedHomeIndexRoute: ProtectedHomeIndexRoute,
  ProtectedNewsFeedIndexRoute: ProtectedNewsFeedIndexRoute,
  ProtectedPodcastsIndexRoute: ProtectedPodcastsIndexRoute,
  ProtectedPostsIndexRoute: ProtectedPostsIndexRoute,
  ProtectedPodcastsPodcastIdIndexRoute: ProtectedPodcastsPodcastIdIndexRoute,
  ProtectedPostsPostidIndexRoute: ProtectedPostsPostidIndexRoute,
}

const ProtectedLayoutRouteWithChildren = ProtectedLayoutRoute._addFileChildren(
  ProtectedLayoutRouteChildren,
)

interface PublicLayoutRouteChildren {
  PublicLoginRoute: typeof PublicLoginRoute
  PublicRegisterRoute: typeof PublicRegisterRoute
}

const PublicLayoutRouteChildren: PublicLayoutRouteChildren = {
  PublicLoginRoute: PublicLoginRoute,
  PublicRegisterRoute: PublicRegisterRoute,
}

const PublicLayoutRouteWithChildren = PublicLayoutRoute._addFileChildren(
  PublicLayoutRouteChildren,
)

interface AdminLayoutRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminAppIndexRoute: typeof AdminAppIndexRoute
  AdminPromptsIndexRoute: typeof AdminPromptsIndexRoute
  AdminReviewsIndexRoute: typeof AdminReviewsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminLayoutRouteChildren: AdminLayoutRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminAppIndexRoute: AdminAppIndexRoute,
  AdminPromptsIndexRoute: AdminPromptsIndexRoute,
  AdminReviewsIndexRoute: AdminReviewsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminLayoutRouteWithChildren = AdminLayoutRoute._addFileChildren(
  AdminLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PublicLayoutRouteWithChildren
  '/admin': typeof AdminLayoutRouteWithChildren
  '/login': typeof PublicLoginRoute
  '/register': typeof PublicRegisterRoute
  '/admin/': typeof AdminIndexRoute
  '/home': typeof ProtectedHomeIndexRoute
  '/news-feed': typeof ProtectedNewsFeedIndexRoute
  '/podcasts': typeof ProtectedPodcastsIndexRoute
  '/posts': typeof ProtectedPostsIndexRoute
  '/admin/app': typeof AdminAppIndexRoute
  '/admin/prompts': typeof AdminPromptsIndexRoute
  '/admin/reviews': typeof AdminReviewsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/podcasts/$podcastId': typeof ProtectedPodcastsPodcastIdIndexRoute
  '/posts/$postid': typeof ProtectedPostsPostidIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PublicLayoutRouteWithChildren
  '/login': typeof PublicLoginRoute
  '/register': typeof PublicRegisterRoute
  '/admin': typeof AdminIndexRoute
  '/home': typeof ProtectedHomeIndexRoute
  '/news-feed': typeof ProtectedNewsFeedIndexRoute
  '/podcasts': typeof ProtectedPodcastsIndexRoute
  '/posts': typeof ProtectedPostsIndexRoute
  '/admin/app': typeof AdminAppIndexRoute
  '/admin/prompts': typeof AdminPromptsIndexRoute
  '/admin/reviews': typeof AdminReviewsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/podcasts/$podcastId': typeof ProtectedPodcastsPodcastIdIndexRoute
  '/posts/$postid': typeof ProtectedPostsPostidIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedLayoutRouteWithChildren
  '/_public': typeof PublicLayoutRouteWithChildren
  '/admin': typeof AdminLayoutRouteWithChildren
  '/_public/login': typeof PublicLoginRoute
  '/_public/register': typeof PublicRegisterRoute
  '/admin/': typeof AdminIndexRoute
  '/_protected/home/': typeof ProtectedHomeIndexRoute
  '/_protected/news-feed/': typeof ProtectedNewsFeedIndexRoute
  '/_protected/podcasts/': typeof ProtectedPodcastsIndexRoute
  '/_protected/posts/': typeof ProtectedPostsIndexRoute
  '/admin/app/': typeof AdminAppIndexRoute
  '/admin/prompts/': typeof AdminPromptsIndexRoute
  '/admin/reviews/': typeof AdminReviewsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/_protected/podcasts/$podcastId/': typeof ProtectedPodcastsPodcastIdIndexRoute
  '/_protected/posts/$postid/': typeof ProtectedPostsPostidIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/admin'
    | '/login'
    | '/register'
    | '/admin/'
    | '/home'
    | '/news-feed'
    | '/podcasts'
    | '/posts'
    | '/admin/app'
    | '/admin/prompts'
    | '/admin/reviews'
    | '/admin/users'
    | '/podcasts/$podcastId'
    | '/posts/$postid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/admin'
    | '/home'
    | '/news-feed'
    | '/podcasts'
    | '/posts'
    | '/admin/app'
    | '/admin/prompts'
    | '/admin/reviews'
    | '/admin/users'
    | '/podcasts/$podcastId'
    | '/posts/$postid'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/_public'
    | '/admin'
    | '/_public/login'
    | '/_public/register'
    | '/admin/'
    | '/_protected/home/'
    | '/_protected/news-feed/'
    | '/_protected/podcasts/'
    | '/_protected/posts/'
    | '/admin/app/'
    | '/admin/prompts/'
    | '/admin/reviews/'
    | '/admin/users/'
    | '/_protected/podcasts/$podcastId/'
    | '/_protected/posts/$postid/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedLayoutRoute: typeof ProtectedLayoutRouteWithChildren
  PublicLayoutRoute: typeof PublicLayoutRouteWithChildren
  AdminLayoutRoute: typeof AdminLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedLayoutRoute: ProtectedLayoutRouteWithChildren,
  PublicLayoutRoute: PublicLayoutRouteWithChildren,
  AdminLayoutRoute: AdminLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected",
        "/_public",
        "/admin"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected/layout.tsx",
      "children": [
        "/_protected/home/",
        "/_protected/news-feed/",
        "/_protected/podcasts/",
        "/_protected/posts/",
        "/_protected/podcasts/$podcastId/",
        "/_protected/posts/$postid/"
      ]
    },
    "/_public": {
      "filePath": "_public/layout.tsx",
      "children": [
        "/_public/login",
        "/_public/register"
      ]
    },
    "/admin": {
      "filePath": "admin/layout.tsx",
      "children": [
        "/admin/",
        "/admin/app/",
        "/admin/prompts/",
        "/admin/reviews/",
        "/admin/users/"
      ]
    },
    "/_public/login": {
      "filePath": "_public/login.tsx",
      "parent": "/_public"
    },
    "/_public/register": {
      "filePath": "_public/register.tsx",
      "parent": "/_public"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/_protected/home/": {
      "filePath": "_protected/home/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/news-feed/": {
      "filePath": "_protected/news-feed.index.tsx",
      "parent": "/_protected"
    },
    "/_protected/podcasts/": {
      "filePath": "_protected/podcasts/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/posts/": {
      "filePath": "_protected/posts/index.tsx",
      "parent": "/_protected"
    },
    "/admin/app/": {
      "filePath": "admin/app/index.tsx",
      "parent": "/admin"
    },
    "/admin/prompts/": {
      "filePath": "admin/prompts/index.tsx",
      "parent": "/admin"
    },
    "/admin/reviews/": {
      "filePath": "admin/reviews/index.tsx",
      "parent": "/admin"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx",
      "parent": "/admin"
    },
    "/_protected/podcasts/$podcastId/": {
      "filePath": "_protected/podcasts/$podcastId/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/posts/$postid/": {
      "filePath": "_protected/posts/$postid/index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
